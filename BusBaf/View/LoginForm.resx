<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gunaElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAABuwAAAbsAR51ODUAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAayklEQVR4Xu3deZQdVZ0HcEXPKGf0H/+YOTpz5hz/m3P0D0mnN7OCKIohgZCEgRBIAoFRlOOMjjqi
        hl7SHbKwE0AEJSwSAsOS0N3p7nS/7ixASCAYlkDQEMy+LyoCSe78fh0rPF5/31L33ap6dfP943PEm+S9
        V3Xv71u3blW99zFjTGrVt/Z9vq6l96aaWcvXVDd3bx7a1HmgqrHjvSENbcfPuP4ZE5b8eyOvaYbdsNKM
        mPusGTXveTP6xrXmrJteJDosNope8ZCYKyaJz6KxmRawsZJJgZ5R29LzcHVT154zrm+DhRyGBIcU/Aoz
        ev4LqNOJinlPtIv/FF9AY7aSwcZKJIX/5Zrm7g2oiG3UzlouRb8GdSiRrQ/EHeKf0RiuRLCxkkjh/5MU
        a6/ttD5XdXOXGSlT+6xOI3LtiJgp/hGN6UoCGytFXUvmmqqG9mOokMOSADHD56xCnUUUle1iBBrblQI2
        VgI5z78fFbKNqsaOgQW9nM4hisP74ko0xisBbEySTPk/Lef661Eh26hu6uRKPlWCW8Un0ZhPEmxMihT/
        J+UcfTsqZBt6vn/WTetyO4IoKU+I09DYTwpsTErNrOXPokK2odP+M3nkp8rTisZ+UmBjEupaem9HhWxD
        F/xGzeMlPqpYl6AaSAJsjFt9a2bKEAc39QRGzFmNdjpRpXhXDEW1EDfYGCc97x/auOxdVMg2alt60A4n
        qjQbROLrAbAxTjL1vxcVsg2dRfCWXkqRaagm4gQb4yJH/89VNbQfRcVsQ04l0E4mqlRbxemoNuICG+NS
        O6unAxWyjSEN7Vz1pzT6KaqNuMDGOOi5vxStk9t8FY/+lFK7RWJrAbAxDnWtme+iQrY1ct5zaOcSpcFw
        VCNxgI1x0C/xQIVsQ6f/YKcSpcVcVCNxgI1xqGrseB8Vs426ll60U4nS4k1UI3GAjVGT8/VzUSHb4o0/
        5IF/R7USNdgYNTliz0GFnKumqc1ctzhjFixbaR7uXWH+r2+l0P/9qEXrNplH1v2RKDaPr99sXtu+e5BX
        xdp3dpn217eau1ZtNt+67SVU7Mh4VCtRg41Rq23pWYQKPnBz20rTkcmY9vZ2s2TJkqK2bdtmtm/fThSr
        w4cPF3Xo0CGzff9+8+SGd1DRZ7sG1UrUYGPUamctX4UKX4/2nT09sMjz0ZBAnUMUNS1uVPT57DlwYGBW
        AIpfzUK1EjXYGLWa5u5NucX/cO9KWODFdHd3w84hitrBgwdhoRdySKzZshMFwG9QrUQNNkatuqlzT3bx
        L+1fAYu7FBk5VUCdQxS1A3JER0Veis279+YGQAeqlajBxqjpD3gExb84Y3fkD/T19cHOIYpaOQGgXt66
        KzsAMqhWogYboxYEwPylK8zSpUthYZeKAUBJKTcA1OO/P7k4eGoFgF7iW9bVBYs6DAYAJcVFABw4eDC4
        VHhqBcCDPeVN/QMMAEqKiwBQz709sCh4agWAi6O/YgBQUlwFwH6ZBZxSAfCdhZm/omK2wQCgpLgKAHVD
        96ZEngeAjVF7NLPyGCpmGwwASorLANiwffffUK1EDTZG7Zn+fljMNhgAlBSXAbBl775jqFaiBhujtiyT
        gcVsgwFASXEZADv27T+OaiVqsDFqYe/3L4QBQElxGQD6nEBuncQBNkats2c5LGYbDABKissA2MsAsMMA
        oKQwACwxAMgHDABLDADyAQPAEgOAfMAAsMQAIB8wACwxAMgHDABLDADyAQPAEgOAfMAAsMQAIB8wACwx
        AMgHDABLDADyAQPAEgOAfMAAsMQAIB8wACwxAMgHDABLDADyAQPAEgOAfMAAsMQAIB8wACwxAMgHDABL
        DADyAQPAEgOAfMAAsMQAIB8wACzduLLv+E39XcaFBS+sMou3vU0Uu/4Du82aI/ud6Nm7+wNUK1GDjVFr
        XtF7vLG3w7gwb80K89C2zUSx6zq426z4834n2hkAdhgAlBQGgCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA
        5AMGgCUGAPmAAWCJAUA+YABYYgCQD075ADjj+mc+K0aJa8VPS9Xc3wuL2QYDgJLiMgDa9u46dtZNL/40
        hGvFKPFZVJulgo2FSAGPFA+KjeK4MGExAMgHTgNgzy4jxWzjuNgoHhQjUc0WAhsRKdzTxc3CquizMQDI
        BxUSANk0DG4Wp6MaRmBjLinaYeLN7CIuBwOAfFCBARB4UwxDtZwLNmaTgh0qPsgu4HIxAMgHFRwA6gMx
        FNV0NtgYkGL9lHg1u3hdYACQDyo8ANSr4lOotgOwMSDFOju3eF1gAJAPUhAAajaq7QBsVFKoNeJoduG6
        wgAgH6QkAI6KGlTjCjYqKdRbcgvXFQYA+SAlAaBuQTWuYKOSQl2VW7iuMADIBykKgFWoxhVslCL9hPhL
        dtG6xAAgH6QoAP4iPoFqfVCDkiL9cm7RusQAIB+kKADUl1GtD2pQUqQX5xatSwwA8kHKAuBiVOuDGpQU
        6dTconWJAUA+SFkATEW1PqhBSZEyAIiKYABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQDxgA
        lhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA5AMG
        gCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA5AMGgCUGAPmA
        AWCJAUA+YABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+
        YABYYgCQDxgAlhgA5AMGgCUGAPmAAWCJAUA+YABYYgCQD3wOgMtzi9YlBgD5IGUBcDmq9UENSop0ZG7R
        usQAIB+kLABGolof1KCkSD8jjmUXrUsMAPJBigLgmPgMqvVBDQEp1NdzC9cVBgD5IEUB8DqqcQUblRTq
        A7mF6woDgHyQogB4ANW4go1KCjWyKwEMAPJBigIAXgFQsFFJoX5cZLIL1xUGAPkgJQGQER9HNa5gY0CK
        9YviSHbxusAAIB+kIACOiC+i2g7AxmxSsFfnFnC5GADkgxQEwNWoprPBxlxStC3iaHYRl4MBQD6o4AA4
        KlpQLeeCjYgUbq1wcmmQAUA+qNAAeF3UohpGYGM+UryfFvNEWesCDADyQYUFgJ7vzxOfRrWbD2wsRor4
        NPEloZcK7xCrxfpSMQDIB44D4LgU7/oQVos7xFTxJXEaqtViYGPUmlf0HkfFbIMBQElxGQDte3d/gGol
        arAxagwA8gEDwBIDgHzAALDEACAfMAAsMQDIBwwASwwA8gEDwBIDgHzAALDEACAfMAAsMQDIBwwASwwA
        8gEDwBIDgHzAALDEACAfMAAsMQDIBwwASwwA8gEDwBIDgHzAALDEACAfMAAsMQDIBwwASwwA8gEDwBID
        gHzAALDU3J9hAFDquQyAtr273ke1EjXYGLWGTN8xVMw2GACUFJcB8MSOHe+iWokabIzadcv7j6JitsEA
        oKS4DICHNm87jGolarAxat9/qv89VMw2GACUFJcBcMtLb+9AtRI12Bi1s29efggVsw0GACXFZQBcvHDD
        GlQrUYONURva1HnA1Y+DMAAoKa4C4O+/CpRBtRI12Bg1DYDpjzAAKN1cBcAvezedegFwxvXPmCYHswAG
        ACXFRQBk/SbgqRcAY+/uMk19nbCwS8UAoKSUGwB9R/aZGYtfO3UDQE1fVN4sgAFASSk3AH6ZGZj6n9oB
        oL73VMY0ZZbBAi+GAUBJsQ2AfjHvhc3ZxX9qB4C6ZOFy09zXBYu8EAYAJcUmADKH95kftb+RW/wMADVy
        bof5WXdfqNkAA4CSEiYA9Ki/8K2tZvyvX0bFrxgAgXNu7TQ/bOszpdwrwACgpJQSAO17d5sFv99iLn3w
        FVT02RgASH1ru/n2gi4zWU4RrljUa6549KOmP7LSTHt0A1HsftL1hrm+b9NHzBQ/6njDTHvkFfPtO9ej
        Qs+HAWCjprkb7UyitGEA2GAAkCcYADYYAOQJBoANBgB5ggFggwFAnmAA2GAAkCcYADYYAOQJBoANBgB5
        ggFggwFAnmAA2GAAkCcYADYYAOQJBoANBgB5ggFgI18AjL5xrRk173kzYu6zZsSc1Wak/Pfo+S/In60b
        9HeJAjpGBsaNjBkdO/rfJ8YN/vsOMQBsBAGgBT/shpWmZtZyM6ShDf7dQHVzl/nq7BVxdSxVMB0DOhZ0
        TKCx8qG2gbGmY+xMGWvotcrEALBRIx1X19IL/6wU2qma8qBDyGNa+Nr3aEyUonZWj+sDCAMgSRF0KFWg
        M29cZ+pb+6TPC88SS1XXknE1I2AAJG1IQ7sZOfc51DnkAT2vr2rsgH1fDn3NUfPXwPcMgQFQKfQ8D3QQ
        pdjwOatgX7ui6066aIjeu0QMgEoSVwjo9HH4DasG1jH0nFT2zcARxTdDm5YNbF9tS0/sC7BamK6m/MWU
        EQIMgEoT5emADpTiK89+07CLOmh1gbfYVSGX9DTS8nSAAeBSdXObGXNnr/n+k2vNfy950Uz49QpTO6sd
        /t18tDNdH6l0QJ7qhZ9raOOycqfPkPad9iF6z3zqWtrNBff0DYyZa59cZ8bd1SdBFS5AdHt0sRF9pgIY
        AC5c9rtV5pZXNpoHt5746ubHd/1p4DvZ9Sua9bfYFr291fxw6UsyMPC/z6X3FYDOsqLnoUNimoqmka7O
        o/1mS6/soPfJNbSxzXznqefNHa+/cfIrv5/as+3kV3tnDu0zD731jpmx6Hn47xGLbWEAlOPrt3SbuS++
        erIDsz2xe+vJzgwsfHOLOefW0gbIyHnlnwqcuPSEX58+5Cpw9eiPXj/XuF9lzG2vfVj42Zbs3T5o3Nzx
        0ltm5JxO+FrZ9LQj5OyRAWDrnNuWm99s/gPsxEDngV2DOrPn4F5z9eI18DWz6ZQddFjJ9DwXvS5huiCK
        9mMYpdwcNuG+fvPAn/4Ix0ug5/DeQeOmY89uM+neFfA1s4XcDgaAjTNv7DL3vLUJdl62xTvfGdSRSkOg
        lJmA7XVeXUhEr0eFDZu9Au7PUuht4cVOtb59Z4/57ZbCBw31JJg9qqU7d8pnXAZfO6CzgBBrAQwAG/PX
        vwY7Dsn3U04PbNpiqoqsFOulK9BpRawbuASGXo+KCT2FPqnY6ZYu6t29qfhBI9ALZgHqxjVvwNfPpjcf
        oc8IMADCOv+eDOywfHRBEHWk+p+2l+B7BKqbwp8G6FEMvRaVRhfx0H4tptg9/tMeXQ3HRz5PZy0I5rrs
        gdXwPQIhTgMYAGG1vvAK7LB8frf9bdiJ6vF3tsH3yBbmUeIz5e+GvQRFg9mcelU15p+aVzW2mTvfeBOO
        j3zynT6qO9a/Bd8noDNA9BkBBkAY2pHFFnCQzJF9sCP7j+yXtC48XQ8zJT1x9xl+HSrdV2f3w/1bCHqd
        wNk3d8NxUUihA8eSHTvh+wR0LQJ9RoABEMbXLDpSdRf4SWe9WQi9VyDM5cBSVqGpOBkrcP/mozMG9DqB
        ib/th+OimHwHDlXssmCJTwsyAMKY8Bu7jmzfvxN2otK7v9B7BYaXvqDDxT+Hwjxuq4tu6DUCVz/xHBwX
        xRQ6cEy+v/CDRqPmlXQawwAIY/y9fbCjiukoEADXPrUOvlcgxIou/Pelqvr542bUVQ3m65d+z5w74RJz
        7vhJ6SSfXbdBt0W3CW1rKcJ8YUuxU68rH7cMgEN74JhRF91X+D6PEtcxGABhjJ7fBTuqmEIdecHd/fC9
        Avq9gqDjBtEjFvr3paj/rwUDxXPeeed5RbdJtw1tczFhgrfYHYAXWh449DZyNGbUV1sL3w9Q4r0ADIAw
        9F7+he+EXwTM15F9h/eZmubCq/alLgLqlA/9+2Jqfny/GTN2HCwgH+i26TaibS8k7BODhR791RvH0Lgo
        pNAi4BNbt8P3CejNQOgzAgyAsGaufBl2WD6FOnLR5q3wPT5UckcOTFnxaxQwc6n55qSpsHB8otuo2wr3
        QR5hA0CfxkOvE9CHxdD4yOexApcBb123Cb5HQD8L+ozAqRMA1U1dO9HOCutbd/TADssHPRQU+M5jhaeO
        enMJ6DTIJgBqfrwQFoyPdFvRPsgnbADoA0XodQKTH1oJx0c+S8FDQUovHV94T+HTxrrWDPyMwBJUK1GD
        jVGTYnoN7SwbLWtKvxloeZ7z/ztf/gN87WxhBqFNAAy/Zi4sFh/ptqJ9kE/YANDbttHrBPQekgUb8ROA
        uR6WWWO+08aG3lfg62cL8aUyd6NaiRpsjFrtrOW9aGfZGDa7w9ye53HObPluA9Ynu0bNLf54Z5ibgGwC
        YPSMX8Ji8ZFuK9oH+YQNAF10K/YtQGff0m3u/eNbcKxkezrP0X/xlm2muqnwmpHeCYo+Xx4zUa1EDTZG
        rbal5wG0w2yNnt9Z9OEOdB33mV07zaQil3BU2GfU7QLgF7BYfKTbivZBPmEDQJXy/QvnLij8RODDIgMe
        BNLi/+ZtxZ8gDfmlIFehWokabIxaXUtvA9ph5Rg+Z5m5rm897Ej0xQ43r32z6OOcgbD3ozMACosjAPRS
        bCnfBfi1m7rynkbm3jSm5/w67S925Fd69A/5tWBjUK1EDTZGTZLxK2inuXDeXb0DVwcWbDzxwMeTWU9y
        6TPcC+R8f+pDpd+nH/JLHQYwAAqLIwCULsCh10Muun+FaXp2g/nV32eSz+zbcXLc6KU+Xe0vtuCXLeTj
        48fF51GtRA02xmFo07I/ox3nUn1rx8BdWpMXri7pPD+X3s4b5jbUgM2DQAyA/GweCFLad8UuCSIj5nQO
        3N6rY6fYTT7IiUfHQx39n0c1EgfYGIfaWT2daOdVCp0+lngP9yDD5YiFXrMQBkB+NrOwgC7exvlchuVB
        42eoRuIAG+NQ35oZh3ZgpSjna6r1iIVesxAGQH7lflGoBnkc381w4qBh9UOzX0I1EgfYGBdJy/fQjkyS
        dmK531Ffa/Eo8KirG2Gx+Ei3Fe2DfIaGfCQY0evxpSwK2tIjv2Xxb0S1ERfYGBeZ2i1AOzMpA51o+eWf
        2WymnPqgDCoWH9k8FKRf9In2dRg6E4jiR1n0nN9mrejvJqPaiAtsjEt9a99pQxuX/RXt1DjpkUGv2Vr8
        mssgNlcAVNV1j5nzxo6FBeMV2UbdVrQPCrG9EoDoD7RUOTgl0NOKE6v91uPmJfFxVBtxgY1xqmvJ/C/a
        uXHQwtcFpjB3+RVTyg0o+Yw6Be4G1G1E215MmGcxSqFhX9+asTot0MJ3dMD4BqqJOMHGuFU3de5DO9qG
        Tr9PXPpBHds28Oda9PqMuYsj/keV9zXgQ2YuMef8xxWwcHyg26bbiLa9FKMdnJ7l0i9v1TUfHRP5+k5D
        QseU3lfg8Adju1AtxA02xk3StFpS9Rja+TaCmzD0vEzP6fXcr4xztJIVewilFFogo6+aKVNlj74XQLZF
        t6mc4le1Dn+nsZCBcSNjRseO+4PEgB3iX1EtxA02JkHSdbrLH84sdyU/LB00Li81DfnFk6buR/ea4dfM
        MSO+OzuV9LPrNui2oG20YbnSXkneFbWoBpIAG5Pi8qqATttsb+SxoVNI9DnILTldlP0dyVE5Lomu+ueC
        jUmSaV436ngbek7ncoEvH12hRu9P0dCwRf2QAj9HYz5JsDFp0sG3uzod0Gm5w4WbQUZa3PdP5Rt2g/2P
        hyZAp/2XoLGeNNhYCepbM5dXNbQfRZ0fXpvT68iBE3eXRX+LKWFR9GkEtolqNMYrAWysFPWtfV+Rc769
        qPNt6NTR1aoup/2Voa6l5O/cS0KnSOQx31LBxkojhfszV3cM6hH7xPTRLgh0tZ8LfpVFb++NY60nhPXi
        HDSWKw1srEQyG/ikFN5dVY0d76NBEJYuEOotoTkdl5feMKLX+Tnlr1w6G4jjfo8C/iCmiNPQGK5EsLHS
        1bdmLtIvFnUxK9CC1t+h19/9Q6cH+mtAettnOXf4UXyC27tP3AcSy+XCF8VM8RU0VisdbEwTKc466fC5
        UsSLa2Ytf7b+54+ZmplPm+rrl4ZWI+pEfcMJ+v/R34Ma2t8f2rTsCEWvurH9b7APcmj/DW9YYkaK0eKs
        hqfN2Za+/ovF5hs/uU8LvlV8X1wo/g2NyTSBjWkGb0WNwcSJE29Hn4fcGzNmzA9QH0Rt7Nix8vb4M6UV
        bEwz1HFxYADEhwHgDmxMM9RxcWAAxIcB4A5sTDPUcXFgAMSHAeAObEwz1HFxYADEhwHgDmxMM9RxcWAA
        xIcB4A5sTDPUcXFgAMSHAeAObEwz1HFxYADEhwHgDmxMM9RxcWAAxIcB4A5sTDPUcXFgAMSHAeAObEwz
        1HFxYADEhwHgDmxMM9RxcWAAxIcB4A5sTDPUcXFgAMSHAeAObEwz1HFxYADEhwHgDmxMM+moY7kdl+38
        888348ePd27SpEnz0Och9yQAZqC+zXbBBRfAfirHhRdeKG+PP1NawcY0k87/W+5gyHbppZeaq666yjl5
        3R+gz0PuSQCMRn2b7YorroD9VI4ZM2bI2+PPlFawMc2k8xkAnmMAuAMb00w6nwHgOQaAO7AxzaTzGQCe
        YwC4AxvTTDqfAeA5BoA7sDHNpPMZAJ5jALgDG9NMOp8B4DkGgDuwMc2k8xkAnmMAuAMb00w6f3fuYMg2
        efJk2LnlktetyF9/9ZH045Dcfs01ffp02E/lkAA4hj5PmsHGNBs7dmwHGhCBSZMmwc4t18SJEz+DPg+5
        J/v6H6Qv38vt22xTpkyB/VSOadOm7UGfJ81gY5pJ5zfnDoZseoso6txyyNHmL+izUHQk6Nei/g1cdNFF
        sK/Kcdlll61EnyXNYGOaycD4ggyA/bkDItvll18OO9iWTP9no89C0RkzZswFqG8D48aNc7oOcOWVVx6/
        +OKLz0CfJc1gY9rJ4JiMBkVAB4d0KOzosKZOnboZfQaKnoT9g6h/A/rwDuozGxLyC9BnSDvY6AMJgctk
        EBzIHRQBPRWQ4oWdXSqZEq6Vo8zn0PtT9CZOnHi6hMB86c+8T4BOmDChrLCfMWPG8SlTptyN3t8HsNEX
        EgL/IgNkjgyEXnEoe2AE9FxRCrnk6aKe78spxKtyRNBrQvB9KV7Sz/XSl3eJdeL9oG8DOuOT6fvAqV8p
        YaDT/WnTph2QcfG89HMVek8/mI/9PxNEEGVWW/HqAAAAAElFTkSuQmCC
</value>
  </data>
</root>